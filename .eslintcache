[{"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\index.js":"1","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\App.js":"2","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\card.component.js":"3","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\Card.component.js":"4","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\Board.component.js":"5","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\pages\\Welcome.page.js":"6","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\StartPanel.component.js":"7","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\Button.component.js":"8","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\pages\\Game.page.js":"9","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\PlayerPanel.component.js":"10","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\contexts\\Board.context.js":"11","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\contexts\\Game.context.js":"12"},{"size":220,"mtime":1611695039858,"results":"13","hashOfConfig":"14"},{"size":709,"mtime":1612386427491,"results":"15","hashOfConfig":"14"},{"size":323,"mtime":1611697533745,"results":"16","hashOfConfig":"14"},{"size":1478,"mtime":1613864039981,"results":"17","hashOfConfig":"14"},{"size":1036,"mtime":1613863755600,"results":"18","hashOfConfig":"14"},{"size":317,"mtime":1611956933274,"results":"19","hashOfConfig":"14"},{"size":1408,"mtime":1612386120657,"results":"20","hashOfConfig":"14"},{"size":846,"mtime":1613863758481,"results":"21","hashOfConfig":"14"},{"size":650,"mtime":1612384887562,"results":"22","hashOfConfig":"14"},{"size":324,"mtime":1612384706314,"results":"23","hashOfConfig":"14"},{"size":1830,"mtime":1613758480816,"results":"24","hashOfConfig":"14"},{"size":1453,"mtime":1613863596280,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1ej7ft7",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\index.js",[],["55","56"],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\App.js",["57"],"import './App.scss';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport BoardContextProvider from './contexts/Board.context';\nimport GameContextProvider from './contexts/Game.context';\nimport WelcomePage from './pages/Welcome.page';\nimport GamePage from './pages/Game.page';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n    <div className=\"App\">\n      <GameContextProvider>\n        <BoardContextProvider>\n            <Route path=\"/\" exact component={WelcomePage} />\n            <Route path=\"/game\" exact component={GamePage} />\n        </BoardContextProvider>\n      </GameContextProvider>\n    </div>\n        </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\card.component.js",[],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\Card.component.js",[],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\Board.component.js",["58"],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\pages\\Welcome.page.js",[],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\StartPanel.component.js",[],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\Button.component.js",[],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\pages\\Game.page.js",["59"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport BoardCoomponent from '../components/Board.component';\r\nimport BoardComponent from '../components/Board.component';\r\nimport PlayerPanelComponent from '../components/PlayerPanel.component';\r\n\r\nconst GameContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 20px;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nfunction GamePage(props) {\r\n    return (\r\n        <GameContainer>\r\n            <PlayerPanelComponent/>\r\n            <BoardComponent/>\r\n            <PlayerPanelComponent/>\r\n        </GameContainer>\r\n    );\r\n}\r\n\r\nexport default GamePage;","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\PlayerPanel.component.js",[],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\contexts\\Board.context.js",["60","61"],"import React, { useState, useEffect } from 'react';\r\n\r\nexport const BoardContext = React.createContext();\r\n\r\nconst BoardContextProvider = (props) => {\r\n\r\n    const [boardConfig, setBoardConfig] = useState(\r\n        {\r\n            size: {\r\n                small: 24,\r\n                medium: 36,\r\n                large: 48\r\n            }\r\n        }\r\n    )\r\n\r\n    const [boardArray, setBoardArray] = useState([]);\r\n\r\n    const [boardSize, setBoardSize] = useState(24);\r\n\r\n    const GetBoardArray = (size) => {\r\n        let image;\r\n        let number;\r\n        let array = [];\r\n        setBoardArray([]);\r\n        for (let i = 0; i < size / 2; i++) {\r\n            number = RandomNumber(0, 200);\r\n            image = `https://picsum.photos/id/${number}/300/`;\r\n            array.push({number: number, img: image});\r\n        }\r\n       array = ShuffleBoard(array.concat(array));\r\n       setBoardArray(array.map((card, i) => {\r\n            return {...card, id: i};\r\n       }))\r\n       \r\n    }\r\n    \r\n    const RandomNumber = (min, max) => {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n\r\n    const ShuffleBoard = (array) => {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n        return array;\r\n    }\r\n    \r\n    useEffect(() => {\r\n        GetBoardArray(boardSize);\r\n        console.log(boardArray);\r\n    }, [boardSize]);\r\n\r\n    return (\r\n        <BoardContext.Provider value={{\r\n            boardArray,\r\n            boardSize,\r\n            setBoardSize,\r\n            boardConfig\r\n        }}>\r\n            {props.children}\r\n        </BoardContext.Provider>\r\n    );\r\n}\r\n\r\nexport default BoardContextProvider;\r\n\r\n","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\contexts\\Game.context.js",["62","63","64"],"import React, {useState, useEffect} from 'react';\r\n\r\nexport const GameContext = React.createContext();\r\n\r\nconst GameContextProvider = (props) => {\r\n\r\n    const [cardsArray, setCardsArray] = useState([]);\r\n\r\n    const addCard = (card) => {\r\n        setCardsArray(prevState => [...prevState, card]);\r\n    };\r\n\r\n    const statusChange = (status) => {\r\n        cardsArray.map(card => {\r\n            let selected = document.getElementById(`${card.id}`);\r\n            return selected.setAttribute('data-status', status);\r\n        })\r\n    }\r\n\r\n    const setSelected = () => {\r\n        statusChange('selected');\r\n    }\r\n\r\n    const setHidden = () => {\r\n        statusChange('hidden');\r\n    }\r\n\r\n    const setCollected = () => {\r\n        statusChange('collected');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(cardsArray.length <= 2){\r\n            setSelected();\r\n        }\r\n        if(cardsArray.length == 2){\r\n            setTimeout(() => {\r\n                if(cardsArray[0].number == cardsArray[1].number){\r\n                    setCollected();\r\n                }\r\n                else {\r\n                    setHidden();\r\n                }\r\n                setCardsArray([]);\r\n            }, 1000)\r\n        }\r\n    }, [cardsArray]);\r\n\r\n    return (\r\n        <GameContext.Provider value={{\r\n            addCard,\r\n            cardsArray\r\n        }}>\r\n            {props.children}\r\n        </GameContext.Provider>\r\n    )\r\n}\r\n\r\nexport default GameContextProvider;\r\n",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":2,"column":50,"nodeType":"71","messageId":"72","endLine":2,"endColumn":54},{"ruleId":"69","severity":1,"message":"73","line":2,"column":29,"nodeType":"71","messageId":"72","endLine":2,"endColumn":37},{"ruleId":"69","severity":1,"message":"74","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":23},{"ruleId":"69","severity":1,"message":"75","line":7,"column":25,"nodeType":"71","messageId":"72","endLine":7,"endColumn":39},{"ruleId":"76","severity":1,"message":"77","line":55,"column":8,"nodeType":"78","endLine":55,"endColumn":19,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":36,"column":30,"nodeType":"82","messageId":"83","endLine":36,"endColumn":32},{"ruleId":"80","severity":1,"message":"81","line":38,"column":41,"nodeType":"82","messageId":"83","endLine":38,"endColumn":43},{"ruleId":"76","severity":1,"message":"84","line":47,"column":8,"nodeType":"78","endLine":47,"endColumn":20,"suggestions":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'BoardCoomponent' is defined but never used.","'setBoardConfig' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'GetBoardArray' and 'boardArray'. Either include them or remove the dependency array.","ArrayExpression",["88"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'setCollected', 'setHidden', and 'setSelected'. Either include them or remove the dependency array.",["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},"Update the dependencies array to be: [GetBoardArray, boardArray, boardSize]",{"range":"94","text":"95"},"Update the dependencies array to be: [cardsArray, setCollected, setHidden, setSelected]",{"range":"96","text":"97"},[1527,1538],"[GetBoardArray, boardArray, boardSize]",[1210,1222],"[cardsArray, setCollected, setHidden, setSelected]"]