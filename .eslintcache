[{"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\index.js":"1","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\App.js":"2","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\contexts\\Board.context.js":"3","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\pages\\Welcome.page.js":"4","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\pages\\Game.page.js":"5","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\contexts\\Game.context.js":"6","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\Board.component.js":"7","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\StartPanel.component.js":"8","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\Button.component.js":"9","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\Card.component.js":"10","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\StatsBar.component.js":"11","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\Timer.component.js":"12","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\styles\\global-variables.styles.js":"13","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\styles\\mixins.styles.js":"14","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\styles\\GlobalStyles.styles.js":"15"},{"size":220,"mtime":1611695039858,"results":"16","hashOfConfig":"17"},{"size":821,"mtime":1615654110298,"results":"18","hashOfConfig":"17"},{"size":2275,"mtime":1616102212683,"results":"19","hashOfConfig":"17"},{"size":512,"mtime":1615654110321,"results":"20","hashOfConfig":"17"},{"size":549,"mtime":1615654110320,"results":"21","hashOfConfig":"17"},{"size":2199,"mtime":1615654110317,"results":"22","hashOfConfig":"17"},{"size":1069,"mtime":1616102197141,"results":"23","hashOfConfig":"17"},{"size":1145,"mtime":1615654110309,"results":"24","hashOfConfig":"17"},{"size":946,"mtime":1615654110305,"results":"25","hashOfConfig":"17"},{"size":2801,"mtime":1616101677820,"results":"26","hashOfConfig":"17"},{"size":1711,"mtime":1615654110311,"results":"27","hashOfConfig":"17"},{"size":1060,"mtime":1615654110312,"results":"28","hashOfConfig":"17"},{"size":94,"mtime":1615654110351,"results":"29","hashOfConfig":"17"},{"size":371,"mtime":1615654110352,"results":"30","hashOfConfig":"17"},{"size":785,"mtime":1615654110349,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1ej7ft7",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\index.js",[],["64","65"],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\App.js",[],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\contexts\\Board.context.js",["66","67"],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\pages\\Welcome.page.js",[],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\pages\\Game.page.js",[],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\contexts\\Game.context.js",["68","69"],"import React, {useState, useEffect, useContext} from 'react';\r\nimport { BoardContext } from './Board.context';\r\n\r\nexport const GameContext = React.createContext();\r\n\r\nconst GameContextProvider = (props) => {\r\n\r\n    const { boardSize } = useContext(BoardContext);\r\n\r\n    const [gameStart, setGameStart] = useState(false);\r\n    const [cardsArray, setCardsArray] = useState([]);\r\n    const [movesCounter, setMovesCounter] = useState(0);\r\n    const [player1Score, setPlayer1Score] = useState(0);\r\n\r\n    const addCard = (card) => {\r\n        setCardsArray(prevState => [...prevState, card]);\r\n    };\r\n\r\n    const statusChange = (status) => {\r\n        cardsArray.map(card => {\r\n            let selected = document.getElementById(`${card.id}`);\r\n            return selected.setAttribute('data-status', status);\r\n        })\r\n    }\r\n\r\n    const setSelected = () => {\r\n        statusChange('selected');\r\n    }\r\n\r\n    const setHidden = () => {\r\n        statusChange('hidden');\r\n    }\r\n\r\n    const setCollected = () => {\r\n        statusChange('collected');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(cardsArray.length <= 2){\r\n            setSelected();\r\n        }\r\n        if(cardsArray.length === 2){\r\n            setTimeout(() => {\r\n                if(cardsArray[0].number === cardsArray[1].number){\r\n                    setCollected();\r\n                    setPlayer1Score(player1Score + 1);\r\n                }\r\n                else {\r\n                    setHidden();\r\n                }\r\n                setCardsArray([]);\r\n            }, 1000)\r\n            setMovesCounter(movesCounter + 1);\r\n        }\r\n    }, [cardsArray]);\r\n\r\n    useEffect(() => {\r\n        console.log(boardSize);\r\n        if(player1Score === boardSize / 2) {\r\n            setGameStart(false);\r\n            console.log('end game');\r\n        }\r\n        console.log(player1Score);\r\n    }, [player1Score])\r\n\r\n    return (\r\n        <GameContext.Provider value={{\r\n            addCard,\r\n            cardsArray,\r\n            movesCounter,\r\n            player1Score,\r\n            gameStart,\r\n            setGameStart\r\n        }}>\r\n            {props.children}\r\n        </GameContext.Provider>\r\n    )\r\n}\r\n\r\nexport default GameContextProvider;\r\n","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\Board.component.js",[],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\StartPanel.component.js",[],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\Button.component.js",[],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\Card.component.js",["70","71","72"],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\StatsBar.component.js",[],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\Timer.component.js",[],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\styles\\global-variables.styles.js",[],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\styles\\mixins.styles.js",[],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\styles\\GlobalStyles.styles.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":20,"column":19,"nodeType":"79","messageId":"80","endLine":20,"endColumn":27},{"ruleId":"81","severity":1,"message":"82","line":79,"column":8,"nodeType":"83","endLine":79,"endColumn":19,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"85","line":55,"column":8,"nodeType":"83","endLine":55,"endColumn":20,"suggestions":"86"},{"ruleId":"81","severity":1,"message":"87","line":64,"column":8,"nodeType":"83","endLine":64,"endColumn":22,"suggestions":"88"},{"ruleId":"77","severity":1,"message":"89","line":1,"column":29,"nodeType":"79","messageId":"80","endLine":1,"endColumn":38},{"ruleId":"77","severity":1,"message":"90","line":79,"column":13,"nodeType":"79","messageId":"80","endLine":79,"endColumn":18},{"ruleId":"77","severity":1,"message":"91","line":81,"column":28,"nodeType":"79","messageId":"80","endLine":81,"endColumn":45},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'setIcons' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'GetBoardArray' and 'boardArray'. Either include them or remove the dependency array.","ArrayExpression",["94"],"React Hook useEffect has missing dependencies: 'movesCounter', 'player1Score', 'setCollected', 'setHidden', and 'setSelected'. Either include them or remove the dependency array. You can also do a functional update 'setMovesCounter(m => ...)' if you only need 'movesCounter' in the 'setMovesCounter' call.",["95"],"React Hook useEffect has a missing dependency: 'boardSize'. Either include it or remove the dependency array.",["96"],"'useEffect' is defined but never used.","'icons' is assigned a value but never used.","'setIconComponents' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [GetBoardArray, boardArray, boardSize]",{"range":"103","text":"104"},"Update the dependencies array to be: [cardsArray, movesCounter, player1Score, setCollected, setHidden, setSelected]",{"range":"105","text":"106"},"Update the dependencies array to be: [boardSize, player1Score]",{"range":"107","text":"108"},[1952,1963],"[GetBoardArray, boardArray, boardSize]",[1604,1616],"[cardsArray, movesCounter, player1Score, setCollected, setHidden, setSelected]",[1850,1864],"[boardSize, player1Score]"]