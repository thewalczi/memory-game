[{"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\index.js":"1","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\App.js":"2","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\card.component.js":"3","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\Card.component.js":"4","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\Board.component.js":"5","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\pages\\Welcome.page.js":"6","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\StartPanel.component.js":"7","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\Button.component.js":"8","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\pages\\Game.page.js":"9","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\PlayerPanel.component.js":"10","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\contexts\\Board.context.js":"11","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\contexts\\Game.context.js":"12"},{"size":220,"mtime":1611695039858,"results":"13","hashOfConfig":"14"},{"size":709,"mtime":1612386427491,"results":"15","hashOfConfig":"14"},{"size":323,"mtime":1611697533745,"results":"16","hashOfConfig":"14"},{"size":1685,"mtime":1613309769012,"results":"17","hashOfConfig":"14"},{"size":1495,"mtime":1613309550329,"results":"18","hashOfConfig":"14"},{"size":317,"mtime":1611956933274,"results":"19","hashOfConfig":"14"},{"size":1408,"mtime":1612386120657,"results":"20","hashOfConfig":"14"},{"size":844,"mtime":1612386083262,"results":"21","hashOfConfig":"14"},{"size":650,"mtime":1612384887562,"results":"22","hashOfConfig":"14"},{"size":324,"mtime":1612384706314,"results":"23","hashOfConfig":"14"},{"size":1678,"mtime":1612723584729,"results":"24","hashOfConfig":"14"},{"size":1952,"mtime":1613309743829,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1ej7ft7",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\index.js",[],["54","55"],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\App.js",["56"],"import './App.scss';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport BoardContextProvider from './contexts/Board.context';\nimport GameContextProvider from './contexts/Game.context';\nimport WelcomePage from './pages/Welcome.page';\nimport GamePage from './pages/Game.page';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n    <div className=\"App\">\n      <GameContextProvider>\n        <BoardContextProvider>\n            <Route path=\"/\" exact component={WelcomePage} />\n            <Route path=\"/game\" exact component={GamePage} />\n        </BoardContextProvider>\n      </GameContextProvider>\n    </div>\n        </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\card.component.js",[],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\Card.component.js",["57"],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\Board.component.js",["58"],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\pages\\Welcome.page.js",[],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\StartPanel.component.js",[],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\Button.component.js",[],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\pages\\Game.page.js",["59"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport BoardCoomponent from '../components/Board.component';\r\nimport BoardComponent from '../components/Board.component';\r\nimport PlayerPanelComponent from '../components/PlayerPanel.component';\r\n\r\nconst GameContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 20px;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nfunction GamePage(props) {\r\n    return (\r\n        <GameContainer>\r\n            <PlayerPanelComponent/>\r\n            <BoardComponent/>\r\n            <PlayerPanelComponent/>\r\n        </GameContainer>\r\n    );\r\n}\r\n\r\nexport default GamePage;","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\components\\PlayerPanel.component.js",[],"C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\contexts\\Board.context.js",["60","61"],"import React, { useState, useEffect } from 'react';\r\n\r\nexport const BoardContext = React.createContext();\r\n\r\nconst BoardContextProvider = (props) => {\r\n\r\n    const [boardConfig, setBoardConfig] = useState(\r\n        {\r\n            size: {\r\n                small: 24,\r\n                medium: 36,\r\n                large: 48\r\n            }\r\n        }\r\n    )\r\n\r\n    const [boardArray, setBoardArray] = useState([]);\r\n\r\n    const [boardSize, setBoardSize] = useState(24);\r\n\r\n    const GetBoardArray = (size) => {\r\n        let image;\r\n        let id;\r\n        let array = [];\r\n        setBoardArray([]);\r\n        for (let i = 0; i < size / 2; i++) {\r\n            id = RandomNumber(0, 200);\r\n            image = `https://picsum.photos/id/${id}/300/`;\r\n            array.push({id: id, img: image});\r\n        }\r\n        setBoardArray(ShuffleBoard(array.concat(array)));\r\n    }\r\n    \r\n    const RandomNumber = (min, max) => {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n\r\n    const ShuffleBoard = (array) => {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n        return array;\r\n    }\r\n    \r\n    useEffect(() => {\r\n        GetBoardArray(boardSize);\r\n    }, [boardSize]);\r\n\r\n    return (\r\n        <BoardContext.Provider value={{\r\n            boardArray,\r\n            boardSize,\r\n            setBoardSize,\r\n            boardConfig\r\n        }}>\r\n            {props.children}\r\n        </BoardContext.Provider>\r\n    );\r\n}\r\n\r\nexport default BoardContextProvider;\r\n\r\n","C:\\Users\\walcz\\Documents\\PRACE\\WEB\\memory-game\\src\\contexts\\Game.context.js",["62","63","64","65"],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":50,"nodeType":"72","messageId":"73","endLine":2,"endColumn":54},{"ruleId":"74","severity":1,"message":"75","line":58,"column":31,"nodeType":"76","messageId":"77","endLine":58,"endColumn":33},{"ruleId":"70","severity":1,"message":"78","line":2,"column":29,"nodeType":"72","messageId":"73","endLine":2,"endColumn":37},{"ruleId":"70","severity":1,"message":"79","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":23},{"ruleId":"70","severity":1,"message":"80","line":7,"column":25,"nodeType":"72","messageId":"73","endLine":7,"endColumn":39},{"ruleId":"81","severity":1,"message":"82","line":50,"column":8,"nodeType":"83","endLine":50,"endColumn":19,"suggestions":"84"},{"ruleId":"70","severity":1,"message":"85","line":11,"column":12,"nodeType":"72","messageId":"73","endLine":11,"endColumn":25},{"ruleId":"70","severity":1,"message":"86","line":37,"column":11,"nodeType":"72","messageId":"73","endLine":37,"endColumn":20},{"ruleId":"74","severity":1,"message":"75","line":42,"column":31,"nodeType":"76","messageId":"77","endLine":42,"endColumn":33},{"ruleId":"81","severity":1,"message":"87","line":59,"column":8,"nodeType":"83","endLine":59,"endColumn":21,"suggestions":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'BoardCoomponent' is defined but never used.","'setBoardConfig' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'GetBoardArray'. Either include it or remove the dependency array.","ArrayExpression",["91"],"'currentPlayer' is assigned a value but never used.","'setPlayer' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'cardCheck'. Either include it or remove the dependency array.",["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [GetBoardArray, boardSize]",{"range":"97","text":"98"},"Update the dependencies array to be: [activeCards, cardCheck]",{"range":"99","text":"100"},[1375,1386],"[GetBoardArray, boardSize]",[1598,1611],"[activeCards, cardCheck]"]